new = "elite"

infmana = true  ---// VERY BUGGY STAY THE FUCK AWAY FROM GTC AND SANS

hidden = true  ---// makes you look less sus

funiblaster = false --funi B)

godmodelockon = true

clothing = false --makes you look like sans (needs shirts and pants)


local CameraShaker = require(game.ReplicatedStorage.ClientModules.CameraShaker)

local camera = game.Workspace.CurrentCamera

local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
    camera.CFrame = camera.CFrame * shakeCf
end)

camShake:Start()

game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
game.Players.LocalPlayer.PlayerGui.CharacterSelection.Character.Value = "Sans"
wait(1)
if not hidden and not godmode then
local nt = game.Players.LocalPlayer.Character.Head.HealthBar.Frame.PName:Clone()
nt.Parent = game.Players.LocalPlayer.Character.Head.HealthBar.Frame
task.wait(.1)
nt.Name = "PName"
nt.Name = "NewPName"
end
if godmode and not hidden then
game.Players.LocalPlayer.Character.Head.HealthBar:Destroy()
elseif not godmode and not hidden then
game.Players.LocalPlayer.Character.Head.HealthBar.Frame.PName:Destroy()
game.Players.LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value.HumanoidRootPart.Size = Vector3.new(999, 999, 999)
end
if hidden then
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Walk.AnimationId = "rbxassetid://9296656666"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Idle.AnimationId = "rbxassetid://9296557744"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Run.AnimationId = "rbxassetid://9296648591"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Block.AnimationId = "rbxassetid://5973908948"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Point4.AnimationId = "rbxassetid://3733309848"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Point2.AnimationId = "rbxassetid://3733309848"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Point3.AnimationId = "rbxassetid://3733309848"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Jump.AnimationId = "rbxassetid://6492505440"
--game.Players.LocalPlayer.Backpack:WaitForChild("Main").SansMoves.Animations.Fall.AnimationId = "rbxassetid://6492518805"
end
wait(1)
if not hidden then
spawn(function()
while wait() do
local args = { [1] = { [1] = getrenv()._G.Pass, [2] = "changeEye", [3] = true } } game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
end
end)
end
--game:GetService("Players").LocalPlayer.Backpack.Main.SansMoves.Name = "TimeParadoxMoves"
--game.Players.LocalPlayer.Character.ForceField:Destroy()
local cl = game:GetService("ReplicatedStorage").Resources.LocalScripts.FixHumanoid:Clone()
cl.Parent = game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
    if game.Players.LocalPlayer.Character.Humanoid.Health == "nan" or game.Players.LocalPlayer.Character.Humanoid.Health == "0" then
    game.Players.LocalPlayer.Character.Humanoid.Health = 1
    local cl = game:GetService("ReplicatedStorage").Resources.LocalScripts.FixHumanoid:Clone()
cl.Parent = game.Players.LocalPlayer.Character
		local chr;
		local head;
		local part;
		local l_player=game:GetService("Players").LocalPlayer
		chr=l_player.Character
		head=chr:WaitForChild('Head')
		part=game.Players.LocalPlayer.Character.ROBLOXCap
		part:Destroy()
    end
end)


local Pass = getrenv()._G.Pass 
local Player = game.Players.LocalPlayer
local CurrentCharacter = Player.PlayerData.CurrentCharacter.Value
local hs1 = game:GetService("ReplicatedStorage").Sounds.Hurt
Settings = {
    M1_Settings = {
        Amount = 6, -- does nothing
        Range = 6,
        Damage = 10,
        HitEffect = "BoneHitEffect",
        HitSound = hs1,
        Velocity = Vector3.new(0,0,0),
        HitTime = 0.5,
        CombatInv = true,
        ComboResetTimer = 1.5,
        Blur = true,
        CameraShake = true,
        CamShakePreset = "Bump",
        LastHitKnockback = true, -- havent added (probably gonna delete)
        RandomAnimation = false -- havent added
    };
    Knockback_Settings = {
        Damage = 40,
        HitType = "BoneHitEffect",
        HurtAnimation = game:GetService("ReplicatedStorage").Animations.HurtAnimations.Knockback2,
        Velocity = Vector3.new(0,0,0),
        HitTime = 1,
        CombatInv = true,
        Blur = true,
        CameraShake = true,
        CamShakePreset = "Explosion",
        RandomAnimation = false -- havent added
    };
    Client_Settings = {
        DeathScene = false,
        CameraShake = true,
        Music = true, -- havent added
        EffectsIntensity = 300,
        ComboResetNotificiation = true
    };
}

Animations = {
    M1_Animations = { -- Last animation should be a knockback animation
        [1] = "rbxassetid://7278785883",
        [2] = "rbxassetid://7023465437",
        [3] = "rbxassetid://7023258012",
        [4] = "rbxassetid://7023264768",
        [5] = "rbxassetid://6996156784" 
    };
}



game:GetService("ReplicatedStorage").Remotes.Functions:InvokeServer({Pass, "ChangeSetting", "CameraShake", Settings.Client_Settings.CameraShake})
game:GetService("ReplicatedStorage").Remotes.Functions:InvokeServer({Pass, "ChangeSetting", "DeathScene", Settings.Client_Settings.DeathScene})
Player.PlayerScripts.EffectsHandler.Mag.Value = Settings.Client_Settings.EffectsIntensity
for i,v in pairs(Player.Backpack.Main[CurrentCharacter.."Moves"].ModuleScript.Animations:GetChildren()) do 
    v:ClearAllChildren()
end

--[[local CooldownFolder = game.Workspace.ServerEffects.ServerCooldown[game.Players.LocalPlayer.Name]
CooldownFolder:ClearAllChildren()]]
local folder = Instance.new("Folder")
folder.Name = "MoveDebounce"
folder.Parent = CooldownFolder
local UIS = game:GetService("UserInputService")
local MainModule = require(game.ReplicatedStorage.ClientModules.MainModule)
local Mouse = Player:GetMouse()
local combo = 0
local m1anims = Animations.M1_Animations
local m1settings = Settings.M1_Settings
local M1Debounce = false
local Disabled = false
local t = tick()
function Notification(title, text)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = title, Text = text})
end

function StopRunning()
local args = {
    [1] = {
        [1] = Pass,
        [2] = "Running",
        [3] = false
    }
}

game:GetService("ReplicatedStorage").Remotes.Functions:InvokeServer(unpack(args))
end

function DamageBlur()
    task.spawn(function()
        game.Lighting.Blur.Size = 16
        for i = 1, 5 do 
           game.Lighting.Blur.Size = game.Lighting.Blur.Size - 2
           task.wait(0.03)
        end
    end)
end



function PlayAnimation(animationid, speed)
    local animation = Instance.new("Animation")
    animation.AnimationId = animationid
    local anim = Player.Character.Humanoid.Animator:LoadAnimation(animation)
    anim:Play()
    anim:AdjustSpeed(speed)
    return anim
end

function M1()
    if combo == #m1anims then combo = 0 end
    if combo < (#m1anims-1) then combo += 1 else Disabled = true task.delay(2, function() Disabled = false end) combo = #m1anims end
    PlayAnimation(m1anims[combo], 1.25) StopRunning()
    print(combo)
    t = tick()
    task.delay(m1settings.ComboResetTimer,function()
	    if (tick() - t) >= m1settings.ComboResetTimer and combo >= 1 and combo ~= #m1anims then
            combo = 0
            if Settings.Client_Settings.ComboResetNotificiation == true then
                Notification("Timer", "Reset Combo")
            end
	    end
    end)
    task.wait()
    for i,v in pairs(game.Workspace:GetChildren()) do 
        if v ~= Player.Character and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Data") then
            local vector = (Player.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position)
            if vector.Magnitude <= Settings.M1_Settings.Range and vector:Dot(Player.Character.HumanoidRootPart.CFrame.lookVector) <= -1 then
                if combo < #m1anims then
                local M1Settings = Settings.M1_Settings
                M1Settings.Velocity = Player.Character.HumanoidRootPart.CFrame.lookVector * 1
                local args = {
                    [1] = Pass,
                    [2] = v,
                    [3] = {
                        ["HitTime"] = M1Settings.HitTime, 
                        ["Type"] = "Normal", 
                        ["HitEffect"] = M1Settings.HitEffect, 
                        ["CombatInv"] = M1Settings.CombatInv,
                        ["HurtAnimation"] = game.ReplicatedStorage.Animations.HurtAnimations["Hurt"..tostring(math.random(1,3))], 
                        ["Velocity"] = M1Settings.Velocity, 
                        ["BlockAble"] = false,
                        ["Sound"] = M1Settings.HitSound,
                        ["Damage"] = M1Settings.Damage
                    }
                }
                game:GetService("ReplicatedStorage").Remotes.Damage:InvokeServer(unpack(args))
                if M1Settings.CameraShake == true then MainModule.shakeScreen(M1Settings.CamShakePreset) end
                if M1Settings.Blur == true then DamageBlur() end
                break
            else
                local KnockbackSettings = Settings.Knockback_Settings
                KnockbackSettings.Velocity = Player.Character.HumanoidRootPart.CFrame.lookVector * 50 + Vector3.new(0,5,0)
                local A_1 = Pass
                local A_2 = v
                local A_3 = 
                    {
                        ["HitTime"] = KnockbackSettings.HitTime,
                        ["Type"] = "Knockback", 
                        ["HitEffect"] = "HeavyHitEffect",
                        ["HurtAnimation"] = KnockbackSettings.HurtAnimation,  
                        ["Sound"] = game:GetService("ReplicatedStorage").Sounds.Knockback,
                        ["CameraShake"] = "BigExplosion",
                        ["Velocity"] = KnockbackSettings.Velocity,
                        ["BlockAble"] = false,
                        ["CombatInv"] = KnockbackSettings.CombatInv,
                        ["Damage"] = KnockbackSettings.Damage
                    }
                local Event = game:GetService("ReplicatedStorage").Remotes.Damage
                Event:InvokeServer(A_1, A_2, A_3)
                if KnockbackSettings.CameraShake == true then MainModule.shakeScreen(KnockbackSettings.CamShakePreset) end
                if KnockbackSettings.Blur == true then DamageBlur() end
                break
            end
            end
        end
    end
end


local M1Event = Mouse.Button1Down:Connect(function()
	if not M1Debounce and not Disabled then 
		M1Debounce = true
        M1()
        task.delay(0.010,function()
            M1Debounce = false
        end)
	end
end)

local player = game.Players.LocalPlayer;local char = player.Character;local pass = getrenv()._G.Pass
function cdr()
spawn(function()
while wait() do
ping = tonumber(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
end
end)
spawn(function()
    local A_1 =  {
      [1] = pass, 
      [2] = "Bones", 
      [3] = "Ground", 
      [4] = Vector3.new(0,1000000,0)
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)
    end)
local pp = char.Effects:WaitForChild('MultipleBones')
pp.Name = 'nocd'
spawn(function() pp:WaitForChild('Warning'):Destroy() pp:WaitForChild('Warning'):Destroy() end)
wait(.5)
local ye = false
for _,v in pairs(pp:GetDescendants()) do
if v.Name == 'RemoteEvent' then
   spawn(function() pp:WaitForChild('Script'):Destroy() end)
    ye = true
    active = true
    spawn(function()
        local v = v
        while active do
            wait()
        for i = 0,math.huge do
            wait()
            --for i = 0,1,1 do
            wait()
            if active then
            if ping >= 500 then
                active = false
                game:GetService("StarterGui"):SetCore("SendNotification", { Title = "High Ping"; Text = "No cd aborted"; Duration = 10; })
                break
                else
                    spawn(function()
    --for i,e in pairs(game.Workspace:GetChildren()) do 
        --if e ~= player.Character and e:FindFirstChild("Humanoid") and e:FindFirstChild("HumanoidRootPart") and e:FindFirstChild("Data") then
            --local vector = (player.Character.HumanoidRootPart.Position - e.HumanoidRootPart.Position)
            --if vector.Magnitude <= 1000 then
    --:FireServer(e)
    for i,e in pairs(game.Workspace.Map["New Map"]:GetChildren()) do
        if e:IsA("Part") then
            wait()
            v:FireServer(e)
        end
    end
    for i,a in pairs(game.Workspace.Map:GetChildren()) do
        if a:IsA("Part") then
            wait()
            v:FireServer(a)
        end
    end
    for i,r in pairs(game.Workspace:GetChildren()) do
        if r:IsA("Part") then
            wait()
            v:FireServer(r)
        end
    end
    v:FireServer(workspace.Terrain)
    v:FireServer(char.Effects.nocd)
    v:FireServer(char.Effects.nocd.Base)
    v:FireServer(char.Effects.nocd.Base.Union)
            --end
        --end
        --end
            
wait()
end)
                    end
            end
end
end
--end
pp:Destroy()
    end)
end

end



if ye then    
    for _,v in pairs(pp:GetDescendants()) do
        if v.Name == 'Bone' then
            v:Destroy()
        end 
end end
end
function elitecdr()
_G.sansnocd = true
local limit = 65 --mess around to find the limit to whatever your internet can handle
spawn(function()
    local A_1 =  {
      [1] = pass,  [2] = "Bones", [3] = "Ground",  [4] = Vector3.new(0,1000000,0)
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)
end) 
local diff = 0;       local pb
spawn(function()
    while _G.sansnocd and char:IsDescendantOf(workspace) do 
pb = tonumber(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
    wait(.2)
local pb2 = tonumber(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
 diff =  math.clamp((pb2/pb) -1 ,0,1)

    end
end)
local pp = char.Effects:WaitForChild('MultipleBones');pp.Name = 'nocd'
spawn(function() pp:WaitForChild('Warning'):Destroy() pp:WaitForChild('Warning'):Destroy() end)
wait(.5) local bonetab = {} 
    for _,v in pairs(pp:GetDescendants()) do
        if v:IsA('BasePart') then
table.insert(bonetab,v)
        end 
end
    for _,v in pairs(game:GetService("Workspace").Map["New Map"]:GetChildren()) do
        if v:IsA('BasePart') then
table.insert(bonetab,v)
        end 
end
local num = #bonetab-(#bonetab-limit)
print(num)
for _,v in pairs(pp:GetDescendants()) do
if v.Name == 'RemoteEvent' then
   spawn(function() pp:WaitForChild('Script'):Destroy() end)
    spawn(function() local v = v
while _G.sansnocd and char:IsDescendantOf(workspace) do local manage = 0
    local ea = workspace.ServerEffects.ServerCooldown[player.Name]:GetChildren()
    local a = 0 
    for _,v in pairs(ea) do local name = string.lower(v.Name) 
        if not string.find(name,'slice') and not string.find(name,'spawnbone') then
            a = a + 1
        end end
    if a > 0 and pb < 500 then
manage = math.clamp(math.round(#bonetab*diff),0,#bonetab);if diff >= .2 then manage = #bonetab-16 end
 for i = 1,num-manage do local hit = bonetab[i]
            spawn(function() v:FireServer(hit) end)
 end
        end
wait()
        end
pp:Destroy()
    end)
    break
end
end
end
function oldcdr()
spawn(function()
    local A_1 =  {
      [1] = pass, 
      [2] = "Bones", 
      [3] = "Ground", 
      [4] = Vector3.new(0,1000000,0)
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)
    end)
local pp = char.Effects:WaitForChild('MultipleBones')
pp.Name = 'nocd'
spawn(function() pp:WaitForChild('Warning'):Destroy() pp:WaitForChild('Warning'):Destroy() end)
wait(.5)
local ye = false
for _,v in pairs(pp:GetDescendants()) do
if v.Name == 'RemoteEvent' then
   spawn(function() pp:WaitForChild('Script'):Destroy() end)
    ye = true
    spawn(function()
        local v = v
        for i = 0,math.huge do
            wait()
            spawn(function()
    --for i,e in pairs(game.Workspace:GetChildren()) do 
        --if e ~= player.Character and e:FindFirstChild("Humanoid") and e:FindFirstChild("HumanoidRootPart") and e:FindFirstChild("Data") then
            --local vector = (player.Character.HumanoidRootPart.Position - e.HumanoidRootPart.Position)
            --if vector.Magnitude <= 1000 then
    --:FireServer(e)
    v:FireServer(workspace.Terrain)
    v:FireServer(char.Effects.nocd)
    v:FireServer(char.Effects.nocd.Base)
    v:FireServer(char.Effects.nocd.Base.Union)
            --end
        --end
        --end
            end)
wait()
        end
pp:Destroy()
    end)
end

end

if ye then    
    for _,v in pairs(pp:GetDescendants()) do
        if v.Name == 'Bone' then
            v:Destroy()
        end 
end end
end
if not hidden then
if not new then
spawn(function()
while wait() do
oldcdr()
end
end)
end
end
if new == "elite" then
elitecdr()
end
if not hidden then
local humanoid = game.Players.LocalPlayer.Character.Humanoid
landed = false 
humanoid.StateChanged:Connect(function(oldState, newState)
    if newState == Enum.HumanoidStateType.Jumping then
        if not landed then
            landed = true
            return
        end
    elseif newState == Enum.HumanoidStateType.Landed and landed then
        landed = false
camShake:Shake(CameraShaker.Presets.Explosion)
local lol = Instance.new("Animation")
                lol.AnimationId = "rbxassetid://4575983939"
                local funni = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(lol)
                funni:Play();
                funni:AdjustSpeed();
player = game.Players.LocalPlayer
char = player.Character
for _,v in pairs(game.ReplicatedStorage.Effects:GetChildren()) do
if v.Name == 'HardLandSmoke' then
clone99 = v:Clone()
clone99.Parent = char.HumanoidRootPart
clone99.CFrame = char.HumanoidRootPart.CFrame
clone99.Anchored = false
clone99.Name = 'DarkSmoke'
clone99.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-3,0)
        wait(3)
        clone99:Destroy()
end
end
end
end)
end
game.Players.LocalPlayer.Character.Bone.Color = Color3.fromRGB(170, 170, 170)
--[[
spawn(function()
while wait(0.5) do
for _,v in pairs(game.Players.LocalPlayer.Character.BadTimeEye:GetDescendants()) do
    if v.Name == 'ParticleEmitter' then
        v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0.16666667163372, 1, 1)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0.10784313827753, 1, 1))}
    end
end
for _,v in pairs(game.Players.LocalPlayer.Character.BadTimeEye:GetDescendants()) do
    if v.Name == 'Beam' then
        v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0.16666667163372, 1, 1)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0.10784313827753, 1, 1))}
    end
end
end
end)]]

function eyecolor(a,b)
    task.wait()
    for i,v in pairs(game.Players.LocalPlayer.Character:WaitForChild('BadTimeEye').Part:GetChildren()) do
        if v:IsA('Beam') then
            v.Color = ColorSequence.new(a)
        elseif v:IsA('ParticleEmitter') then
            v.Color = ColorSequence.new(b)
        end
    end
end

-- detects when the eye is added to the character
game.Players.LocalPlayer.Character.ChildAdded:Connect(function(x)
    if x.Name == 'BadTimeEye' then
        eyecolor(Color3.fromRGB(130, 130, 130), Color3.fromRGB(0, 0, 0)) -- first color is the beam color, second is the particle color
    end
end)


for _,v in pairs(game.Players.LocalPlayer.Character.Bone:GetDescendants()) do
    if v.Name == "Trail" and v:IsA("Trail") then
        v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(130, 130, 130)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
    end
end
for _,v in pairs(game.Players.LocalPlayer.Character.Bone:GetDescendants()) do
    if v.Name == "ParticleEmitter" and v:IsA("ParticleEmitter") then
        v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(130, 130, 130)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 100))}
    end
end
if not hidden then
game.Players.LocalPlayer.Chatted:connect(function(p4) game.ReplicatedStorage.Remotes.Events:FireServer({ pass, "Chatted", p4, Color3.fromRGB(255, 128, 1) }); end);
end
game.Players.LocalPlayer.PlayerGui.SansIndicator.Help.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
if not godmode then
game.Players.LocalPlayer.Character.Head.HealthBar.Frame.PName.Text = ""
end
if not hidden then
local bypass = Instance.new("BoolValue")
bypass.Name = "Battling"
bypass.Parent = game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 100
local spacing = [[ 
]]
   local mt = getrawmetatable(game)
    local backup = mt.__namecall
    if setreadonly then setreadonly(mt, false) else make_writeable(mt, true) end
    
    mt.__namecall = newcclosure(function(...)
        local method = getnamecallmethod()
        local args = {...}
        if tostring(args[1]) == "Events" and tostring(args[2][2]) == 'Chatted' then
    msgg = tostring(args[2][3])
    args[2][3] = '</[Time Sans But Better]\>*:'..spacing..msgg
            return backup(unpack(args)) -- return the modified remote so it goes as how you wish
        end
        return backup(...)
    end)
end
local runS = game:GetService('RunService')
local TweenService = game:GetService("TweenService")

local BodyParts = {
    "Head",
    "Torso",
    "Left Arm",
    "Right Arm",
    "Left Leg",
    "Right Leg"
}


    for i,v in pairs(Player.Character:GetChildren()) do 
        if table.find(BodyParts, v.Name) then
            local part = Instance.new("Part")
            part.Anchored = false 
            part.CanCollide = false 
            part.Massless = true 
            part.CFrame = v.CFrame
            part.Size = v.Size + Vector3.new(0.05,0.05,0.05)
            part.Transparency = 0.5
            part.Color = Color3.new(1,0,0)
            part.Name = "Test"
            part.Material = Enum.Material["Neon"]
            if v.Name == "Head" then 
                local mesh = Instance.new("SpecialMesh")
                mesh.MeshType = Enum.MeshType.Head 
                mesh.Scale = Vector3.new(2.9, 1.2, 1.2)
                mesh.Parent = part
            end
            part.Parent = workspace 
            
        end
    end

game.Workspace.Test.Name = "p1"
game.Workspace.Test.Name = "p2"
game.Workspace.Test.Name = "p3"
game.Workspace.Test.Name = "p4"
game.Workspace.Test.Name = "p5"
game.Workspace.Test.Name = "p6"


local work = game.Workspace

local pa1 = Instance.new("Weld",Player.Character["Head"]) pa1.Name = "AIWeld" pa1.Part0 = work.p1 pa1.Part1 = Player.Character["Head"]
local pa2 = Instance.new("Weld",Player.Character["Torso"]) pa2.Name = "AIWeld2" pa2.Part0 = work.p2 pa2.Part1 = Player.Character["Torso"]
local pa3 = Instance.new("Weld",Player.Character["Left Arm"]) pa3.Name = "AIWeld3" pa3.Part0 = work.p3 pa3.Part1 = Player.Character["Left Arm"]
local pa4 = Instance.new("Weld",Player.Character["Right Arm"]) pa4.Name = "AIWeld4" pa4.Part0 = work.p4 pa4.Part1 = Player.Character["Right Arm"]
local pa5 = Instance.new("Weld",Player.Character["Left Leg"]) pa5.Name = "AIWeld5" pa5.Part0 = work.p5 pa5.Part1 = Player.Character["Left Leg"]
local pa6 = Instance.new("Weld",Player.Character["Right Leg"]) pa6.Name = "AIWeld6" pa6.Part0 = work.p6 pa6.Part1 = Player.Character["Right Leg"]
c1 = 255
c2 = 0
work.p1.Color = Color3.fromRGB(0,1,c1)
work.p2.Color = Color3.fromRGB(0,1,c1)
work.p3.Color = Color3.fromRGB(0,1,c1)
work.p4.Color = Color3.fromRGB(0,1,c1)
work.p5.Color = Color3.fromRGB(0,1,c1)
work.p6.Color = Color3.fromRGB(0,1,c1)
work.p1.Transparency = 0.9
work.p2.Transparency = 0.9
work.p3.Transparency = 0.9
work.p4.Transparency = 0.9
work.p5.Transparency = 0.9
work.p6.Transparency = 0.9
spawn(function()
	local lol = Instance.new('Color3Value')
	lol.Parent = game:GetService("Players").LocalPlayer.Character
	lol.Name = 'yee'
	lol.Value = Color3.fromRGB(255,255,255) -- tween to 0.8
	spawn(function()
		local ti = TweenInfo.new(
			2.5, -- Time
			Enum.EasingStyle.Sine, -- EasingStyle
			Enum.EasingDirection.InOut, -- EasingDirection
			-1, -- RepeatCount (when less than zero the tween will loop indefinitely)
			true, -- Reverses (tween will reverse once reaching it's goal)
			0.5 -- DelayTime
		)

		local tween1 = game:GetService('TweenService'):Create(lol, ti, {Value = Color3.fromRGB(0,0,0)})
		tween1:Play()
	end)
while task.wait() do
        work.p1.Color = lol.Value
		work.p2.Color = lol.Value
		work.p3.Color = lol.Value
		work.p4.Color = lol.Value
		work.p5.Color = lol.Value
		work.p6.Color = lol.Value
		if not godmode then
		char.Head.HealthBar.Frame.PName.TextStrokeColor3 = lol.Value
		end
		game.Players.LocalPlayer.PlayerGui.SansIndicator.Indicator.TextStrokeColor3 = lol.Value
end
end)

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k) 
	if k == "2" then
	    if game.Players.LocalPlayer.PlayerGui.SansIndicator.Indicator.Text == "Telekinesis Enabled" then
	   local args = { [1] = { [1] = getrenv()._G.Pass, [2] = "Telekinesis", [3] = "Special", [4] = game.Players.LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value
    }
}
game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
	   end
    end
end)
mouse.KeyDown:Connect(function(k) 
	if k == "." then
	    if new == true then
	       cdr()
	       end
	       if new == false then
	       oldcdr()
	       end
	       if new == "elite" then
	       elitecdr()
	   end
    end
end)
--//no cooldowns by signal#8888
--// Don't teleport until execute
local toggle = Enum.KeyCode.KeypadZero -- key you press to toggle no cooldown, its active by default, this is here because it also removes other people cooldowns, and also saves your ping!

if not getgc then
	game.StarterGui:SetCore("SendNotification", {
		Title = "Unsupported exploit.";
		Text = "getgc is needed.";
		Duration = 5;
	})
	return
end

if not getrenv then
	game.StarterGui:SetCore("SendNotification", {
		Title = "Unsupported exploit.";
		Text = "getrenv is needed.";
		Duration = 5;
	})
	return
end


repeat task.wait() until game:IsLoaded()

local plrs = game:GetService("Players")
local runS = game:GetService("RunService")
local uis = game:GetService("UserInputService")
local rep = game:GetService("ReplicatedStorage")

local remotes = rep:WaitForChild("Remotes")
local functions = remotes:WaitForChild("Functions")
local plr = plrs.LocalPlayer
local v2 = plr.Character
local adjust = 28
local active = true
local unstress = false
local pass = getrenv()._G.Pass
local current
local gotIT

local function manipulate() -- function that removes local cooldowns
	for k,v in pairs(getgc()) do
		if type(v) == "function" then
			if getfenv(v).script ~= nil and typeof(getfenv(v).script) == "Instance" and getfenv(v).script.Name:match("Moves") and getfenv(v).script:IsDescendantOf(game:GetService("Players").LocalPlayer.Backpack) then
				current = getfenv(v).script
				pcall(function()
					if not gotIT or (gotIT ~= current or gotIT.Parent:IsDescendantOf(game:GetService("Players").LocalPlayer.Backpack)) then
						local info = debug.getinfo(v)
						if info.name and info.name == "takeStamina" then
							gotIT = current
							spawn(function()
								while true do
								    v2.Data.Stamina.Value = 9090909
									if current and current.Parent then
										if active and not uis:IsKeyDown(Enum.KeyCode.E) then
											v(10000000,0)
										end
									else
										break
									end
									task.wait(.001)
								end
							end)
						end
					end
				end)
				local b = debug.getupvalues(v)
				for i,v in pairs(b) do
					if typeof(v) == "table" then
						if v["Teleport"] ~= nil or v["DashAttack"] ~= nil then
							spawn(function()
								while true do
									if active and current and current.Parent then
										for a,b in pairs(v) do
											v[a] = true
										end
									else
										break
									end
									task.wait(.001)
								end
							end)
							return "Made by signal#8888"
						end
					end
				end
			end
		end
	end
end


warn("Made by signal#8888")
local function onChar()
	game.StarterGui:SetCore("SendNotification", {
		Title = "Loading...";
		Text = "Made by signal#8888\nTo start, teleport once.";
		Duration = 8;
	})
	repeat task.wait(.5) until manipulate() == "Made by signal#8888" -- credits for skids go brrr
	game.StarterGui:SetCore("SendNotification", {
		Title = "Loaded.";
		Text = "Cooldown removed from script "..current.Name;
		Duration = 5;
	})
end
game.StarterGui:SetCore("SendNotification", {
	Title = "Hello!";
	Text = "Made by signal#8888";
	Duration = 8;
})
if plr.Character then
	onChar()
end

plr.CharacterAdded:Connect(function()
    wait(2)
    onChar()
end)


local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k) 
	if k == "9" then
loadstring(game:HttpGet("https://www.scriptblox.com/raw/Server-Browser_80", true))();
end
end)
local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k) 
	if k == "=" then
local Id = 
{
    [1] = getrenv()._G.Pass, 
    [2] = "Chatted", 
    [3] = "Id copied.",
    [4] = Color3.fromRGB(255, 0, 0)
}
local Event = game:GetService("ReplicatedStorage").Remotes.Events
Event:FireServer(Id)
setclipboard("game:GetService(".."'".."TeleportService".."'".."):TeleportToPlaceInstance("..game.PlaceId..", ".."'"..game.JobId.."'"..", game.Players.LocalPlayer)")
end
end)

if godmodelockon then
    if not (getgc and getconstants and setconstant) then

    warn("NOT SUPPORTED EXPLOIT")
    game.StarterGui:SetCore("SendNotification", {
        Title = "WARNING";
        Text = "NOT SUPPORTED EXPLOIT";
        Duration = 5;
    })
    return

end

pcall(function()

    local funcs = {}

    for i, v in next, getgc() do

        if type(v) == "function" then

            if getfenv(v).script and getfenv(v).script.Name and getfenv(v).script.Name == "LockOnScript" then

                table.insert(funcs, v)

            end

        end

    end

    repeat wait() until #funcs ~= 0

    local target = funcs[#funcs]

    for i2, v2 in next, getconstants(target) do

        if i2 == 44 and tostring(v2) == "0" then

            setconstant(target, i2, -999999)
            print("hooked")

        end

    end

end)



if infmana then

game.Players.LocalPlayer.Character.Bone.Color = Color3.fromRGB(130, 0, 0)
    function eyecolor(a,b)
    task.wait()
    for i,v in pairs(game.Players.LocalPlayer.Character:WaitForChild('BadTimeEye').Part:GetChildren()) do
        if v:IsA('Beam') then
            v.Color = ColorSequence.new(a)
        elseif v:IsA('ParticleEmitter') then
            v.Color = ColorSequence.new(b)
        end
    end
end

-- detects when the eye is added to the character
game.Players.LocalPlayer.Character.ChildAdded:Connect(function(x)
    if x.Name == 'BadTimeEye' then
        eyecolor(Color3.fromRGB(170, 0, 0), Color3.fromRGB(130, 43, 0)) -- first color is the beam color, second is the particle color
    end
end)


for _,v in pairs(game.Players.LocalPlayer.Character.Bone:GetDescendants()) do
    if v.Name == "Trail" and v:IsA("Trail") then
        v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 150, 0))}
    end
end
for _,v in pairs(game.Players.LocalPlayer.Character.Bone:GetDescendants()) do
    if v.Name == "ParticleEmitter" and v:IsA("ParticleEmitter") then
        v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 150, 0))}
    end
end
    local A_1 =  { [1] = getrenv()._G.Pass,  [2] = "Blocking",  [3] = true } local Event = game:GetService("ReplicatedStorage").Remotes.Functions Event:InvokeServer(A_1)
local v1 = { [1] = getrenv()._G.Pass,  [2] = "Damage",  [3] = "NaN",  [4] = game.Players.LocalPlayer.Character } local event = game:GetService("ReplicatedStorage").Remotes.Events event:FireServer(v1)
local A_1 =  { [1] = getrenv()._G.Pass,  [2] = "Blocking",  [3] = false} local Event = game:GetService("ReplicatedStorage").Remotes.Functions Event:InvokeServer(A_1)
wait(0.3)
sound:Stop()
						local sound = Instance.new('Sound');
		sound.Parent = game.Players.LocalPlayer.Backpack;
		sound.Volume = 3;
		sound.Looped = true;
		sound.Name = "GodTier";
		sound.SoundId = getsynasset("Hello_World.mp3");
		sound:Play()
		
		local runS = game:GetService('RunService')
local TweenService = game:GetService("TweenService")

local BodyParts = {
    "Head",
    "Torso",
    "Left Arm",
    "Right Arm",
    "Left Leg",
    "Right Leg"
}


    for i,v in pairs(Player.Character:GetChildren()) do 
        if table.find(BodyParts, v.Name) then
            local part = Instance.new("Part")
            part.Anchored = false 
            part.CanCollide = false 
            part.Massless = true 
            part.CFrame = v.CFrame
            part.Size = v.Size + Vector3.new(0.05,0.05,0.05)
            part.Transparency = 0.5
            part.Color = Color3.new(1,0,0)
            part.Name = "Test"
            part.Material = Enum.Material["Neon"]
            if v.Name == "Head" then 
                local mesh = Instance.new("SpecialMesh")
                mesh.MeshType = Enum.MeshType.Head 
                mesh.Scale = Vector3.new(2.9, 1.2, 1.2)
                mesh.Parent = part
            end
            part.Parent = workspace 
            
        end
    end

game.Workspace.Test.Name = "p1"
game.Workspace.Test.Name = "p2"
game.Workspace.Test.Name = "p3"
game.Workspace.Test.Name = "p4"
game.Workspace.Test.Name = "p5"
game.Workspace.Test.Name = "p6"


local work = game.Workspace

local pa1 = Instance.new("Weld",Player.Character["Head"]) pa1.Name = "AIWeld" pa1.Part0 = work.p1 pa1.Part1 = Player.Character["Head"]
local pa2 = Instance.new("Weld",Player.Character["Torso"]) pa2.Name = "AIWeld2" pa2.Part0 = work.p2 pa2.Part1 = Player.Character["Torso"]
local pa3 = Instance.new("Weld",Player.Character["Left Arm"]) pa3.Name = "AIWeld3" pa3.Part0 = work.p3 pa3.Part1 = Player.Character["Left Arm"]
local pa4 = Instance.new("Weld",Player.Character["Right Arm"]) pa4.Name = "AIWeld4" pa4.Part0 = work.p4 pa4.Part1 = Player.Character["Right Arm"]
local pa5 = Instance.new("Weld",Player.Character["Left Leg"]) pa5.Name = "AIWeld5" pa5.Part0 = work.p5 pa5.Part1 = Player.Character["Left Leg"]
local pa6 = Instance.new("Weld",Player.Character["Right Leg"]) pa6.Name = "AIWeld6" pa6.Part0 = work.p6 pa6.Part1 = Player.Character["Right Leg"]
c1 = 255
c2 = 0
work.p1.Color = Color3.fromRGB(0,1,c1)
work.p2.Color = Color3.fromRGB(0,1,c1)
work.p3.Color = Color3.fromRGB(0,1,c1)
work.p4.Color = Color3.fromRGB(0,1,c1)
work.p5.Color = Color3.fromRGB(0,1,c1)
work.p6.Color = Color3.fromRGB(0,1,c1)
work.p1.Transparency = 0.9
work.p2.Transparency = 0.9
work.p3.Transparency = 0.9
work.p4.Transparency = 0.9
work.p5.Transparency = 0.9
work.p6.Transparency = 0.9
spawn(function()
	local lol = Instance.new('Color3Value')
	lol.Parent = game:GetService("Players").LocalPlayer.Character
	lol.Name = 'yee'
	lol.Value = Color3.fromRGB(120,30,0) -- tween to 0.8
	spawn(function()
		local ti = TweenInfo.new(
			2.5, -- Time
			Enum.EasingStyle.Sine, -- EasingStyle
			Enum.EasingDirection.InOut, -- EasingDirection
			-1, -- RepeatCount (when less than zero the tween will loop indefinitely)
			true, -- Reverses (tween will reverse once reaching it's goal)
			0.5 -- DelayTime
		)

		local tween1 = game:GetService('TweenService'):Create(lol, ti, {Value = Color3.fromRGB(255,0,0)})
		tween1:Play()
	end)
while task.wait() do
        work.p1.Color = lol.Value
		work.p2.Color = lol.Value
		work.p3.Color = lol.Value
		work.p4.Color = lol.Value
		work.p5.Color = lol.Value
		work.p6.Color = lol.Value
		if not godmode then
		char.Head.HealthBar.Frame.PName.TextStrokeColor3 = lol.Value
		end
		game.Players.LocalPlayer.PlayerGui.SansIndicator.Indicator.TextStrokeColor3 = lol.Value
end
end)
end


function eyecolor(a,b)
    task.wait()
    for i,v in pairs(game.Players.LocalPlayer.Character:WaitForChild('BadTimeEye').Part:GetChildren()) do
        if v:IsA('Beam') then
            v.Color = ColorSequence.new(a)
        elseif v:IsA('ParticleEmitter') then
            v.Color = ColorSequence.new(b)
        end
    end
end

-- detects when the eye is added to the character
game.Players.LocalPlayer.Character.ChildAdded:Connect(function(x)
    if x.Name == 'BadTimeEye' then
        eyecolor(Color3.fromRGB(100, 0, 0), Color3.fromRGB(50, 0, 0)) -- first color is the beam color, second is the particle color
    end
end)


local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k) 
	if k == "z" then
local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
--
local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "AirSpawn2",
        [4] = Vector3.new(1,1,1)
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
--
local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
--
local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "AirSpawn2",
        [4] = Vector3.new(1,1,1)
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
--
local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
wait(0.2)
local A_1 = 
{
    [1] = getrenv()._G.Pass, 
    [2] = "GasterBlasters", 
    [3] = "SummonFour", 
    [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)
game.Players:Chat(("Heh."))
end
end)


		if funiblaster then
		    wait(1)
game.Players.LocalPlayer.Character.Attacks.ChildAdded:Connect(function(v)  
    if v.Name == "GasterBlaster" or v.Name:match("Blaster") then
        
        v:WaitForChild("RootPart"):Destroy()
            end
end)
game.Players.LocalPlayer.Character.Attacks.ChildAdded:Connect(function(v)  
    if v.Name == "BigGasterBlaster" or v.Name:match("BigBlaster") then
        
        v:WaitForChild("RootPart"):Destroy()
            end
end)
end
  end


local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k) 
	if k == "x" then
	    local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))

local A_1 = 
{
    [1] = getrenv()._G.Pass, 
    [2] = "GasterBlasters", 
    [3] = "SummonFour", 
    [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)


local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))

local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))

local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))
local args = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "Ground2",
        [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
    }
}

game:GetService("ReplicatedStorage").Remotes.SansMoves:InvokeServer(unpack(args))

local A_1 = 
{
    [1] = getrenv()._G.Pass, 
    [2] = "GasterBlasters", 
    [3] = "SummonEight", 
    [4] = game:GetService("Workspace")[tostring(game:GetService("Players").LocalPlayer.Backpack.Main.LockOnScript.LockOn.Value)].LockOn.Position
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)



end
end)

spawn(function()
local sound = game.Players.LocalPlayer.Character
local char = game.Players.LocalPlayer.Character
local sound = Instance.new("Sound", char)
sound.Parent = char
sound.Volume = 1
sound.Looped = true
sound.SoundId = getcustomasset("Megalovania.mp3")
sound:Play()
game.Players.LocalPlayer.Character:WaitForChild("Head").HealthBar.Frame.PName.Text = "HM!Sans"
game.Players.LocalPlayer.PlayerGui.UI.Ui.ManaBar.Bar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
game.Players.LocalPlayer.PlayerGui.UI.Ui.StaminaBar.Bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
end
)

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k)
    if k == ";" then 
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "GodMode Enabled";
    Text = "HM!Sans";
    Duration = 1;
})
local A_1 = {
[1] = getrenv()._G.Pass,
[2] = "Telekinesis",
[3] = "Special"
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)
end
end)

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k)
    if k == "]" then 
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Infinite Stamina Enabled";
    Text = "HM!Sans";
    Duration = 1;
})
game.Players.LocalPlayer.Character.ChildAdded:Connect(function(v)
if v.Name == 'DrainStamina' or v.Name == 'DrainSprint' then
task.wait()
v:Destroy()
end
end)
end
end)

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k)
    if k == "[" then 
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Bone Aura Loaded";
    Text = "HM!Sans";
    Duration = 1;
})
local childad = game.Players.LocalPlayer.Character.Attacks.ChildAdded:Connect(function(v)

    if v.Name == "Bone" then
  
        v:WaitForChild("NotTouched"):Destroy()
        v:WaitForChild("ParticleEmitter"):Destroy()
        v:WaitForChild("BodyVelocity"):Destroy()
  
        v1 = Instance.new("BodyPosition", v)
        fol = Instance.new("Folder", v1)
        v1.Name = "Client"
        v1.MaxForce = Vector3.new(99999,99999,99999) * math.huge
        v1.D = math.huge
        v1.P = math.huge
        wait(5)
        v.Rotation = Vector3.new(0,0,0)
  
    end
  end)
  
  local radius = 7 --how far away do you want the parts to be from you
  local circle = math.pi * 2-- Gets a full circle
  local char = game.Players.LocalPlayer.Character
  local tab = {}--Creates a table so you can insert values inside
  local amm = 6---amount of projectiles
  pass = getrenv()._G.Pass
  for i = 1,amm,1 do
  spawn(function()
    local A_1 = {
        [1] = getrenv()._G.Pass,
        [2] = "Bones",
        [3] = "AirSpawn2",
        [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    }
    local Target = game:GetService("ReplicatedStorage").Remotes.SansMoves
    Target:InvokeServer(A_1)
    wait()
  end)
  end
  am = 0
  local detect
  local detect2
  val = Instance.new('NumberValue',player)-- creates a value instance so you can use it in a connect function
  val.Name = 'Bone'
  detect = char.Attacks.ChildAdded:Connect(function(pp)-- this will detect if a child is added to the character
  if pp.Name == 'Bone' then
    table.insert(tab,pp)--it will insert the blasts to the table
  am = am + 1--adds the numbers
  val.Value = am--set the Number value to that number
  pp:WaitForChild('BodyVelocity'):Destroy()
  pp:WaitForChild('Hitted'):Destroy()
  end
  end)
  
  detect2 = val:GetPropertyChangedSignal("Value"):Connect(function()-- detects if the value is equal to the amount of time the remote is fired
  if val.Value == amm then
  tab2 = {}
  for _,v in pairs(tab) do---will look through the tables
  v.CFrame = char.HumanoidRootPart.CFrame*CFrame.new(math.random(-20,20),1000,math.random(-20,20))
  v1 = Instance.new('BodyPosition',v)
  fol = Instance.new('Folder',v1)
  v1.Name = 'Client'
  v1.MaxForce = Vector3.new(1,1,1)*100000
  v1.D = 500
  v1.P = 30000
  v1.Position = (char.HumanoidRootPart.CFrame).p + Vector3.new(0,0,0)
        table.insert(tab2,v1)
  end
  
  for i = 1,#tab2 do
  spawn(function()
  local angle = circle / #tab2 * i---this will get the amount of parts you have and multiply with the current i to get the proper postion to make a circle
    local part = tab2[i]
  local  mspeed = 0
  
  while true do
    wait()
    mspeed = mspeed + 2-- change it to a higher number if u want it faster
    local x_pos = math.cos(angle) * radius
    local y_pos = math.sin(angle) * radius
    
    local cf = char.HumanoidRootPart.CFrame * CFrame.Angles(math.rad(mspeed), math.rad(mspeed),math.rad(0)) *CFrame.new(x_pos, 0, y_pos)
    part.Position = cf.p
  
  
  end
  end)
  end
  val:Destroy()
  detect:Disconnect()
  detect2:Disconnect()
  end
  end)
end
end)

local plrs = game:GetService("Players")
local light = game:GetService("Lighting")
local rep = game:GetService("ReplicatedStorage")
local starter = game:GetService("StarterGui")
local tweenS = game:GetService("TweenService")
local uis = game:GetService("UserInputService")
local txtS = game:GetService("TextService")
local debris = game:GetService("Debris")
local TS = game:GetService("TweenService")
local Resources = game:GetService("ReplicatedStorage").Resources
local tweeninfo = TweenInfo.new
local taskwait = task.wait
local taskspawn = task.spawn
local cf = CFrame.new
local angles = CFrame.Angles
local mathrand = math.random
local mathrad = math.rad
local vector = Vector3.new
local params = RaycastParams.new()
params.FilterDescendantsInstances = {workspace:WaitForChild("Map")}
params.FilterType = Enum.RaycastFilterType.Whitelist
local remotes = rep:WaitForChild("Remotes")
local mainModule = require(rep:WaitForChild("ClientModules").MainModule)
local plr = plrs.LocalPlayer
local pass = getrenv()._G.Pass
local currentIndex = 0
local timesinc = 0
local deb = false
local sit = false
local maxIndex = 1
local currentPhaseBuff = 1
local timesIncreased = 0
local buffed = 0
local locked
local currentModule
local currentScript
local lastAdded
local realLast
local block
local fun
local index
stack = Instance.new("BoolValue")
stack.Parent = game.Workspace
stack.Name = "lolfunny"
stack.Value = false
local l__Workspace__1 = game:GetService("Workspace");
local l__Players__2 = game:GetService("Players");
local l__Lighting__3 = game:GetService("Lighting");
local l__ReplicatedFirst__4 = game:GetService("ReplicatedFirst");
local l__UserInputService__5 = game:GetService("UserInputService");
local l__RunService__6 = game:GetService("RunService");
local v7 = require(game:GetService("ReplicatedStorage").RegionModule);
local l__Remotes__8 = game.ReplicatedStorage:WaitForChild("Remotes");
local v9 = require(game.ReplicatedStorage.ClientModules.MainModule);
local v10 = require(game.ReplicatedStorage.CameraShaker);
local v11 = v10.new(Enum.RenderPriority.Camera.Value, function(p1)
	workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame * p1;
end);
v11:Start();
local l__LocalPlayer__12 = l__Players__2.LocalPlayer;
local l__mouse__13 = l__LocalPlayer__12:GetMouse();
function TransparentText(p3, p4)
	v9.CreateTween(p3, { 1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, false, 0 }, {
		TextTransparency = p4
	}, true);
end;
l__Remotes__8.InvokeClient.OnClientInvoke = function(p5)
	local v14 = p5[1];
	if v14 == "Challenged" then
		local l__ChallengeInfo__15 = l__LocalPlayer__12.PlayerGui.UI.Ui.ChallengeInfo;
		local l__Info__16 = l__ChallengeInfo__15.Info;
		local l__Accept__17 = l__ChallengeInfo__15.Accept;
		local l__Decline__18 = l__ChallengeInfo__15.Decline;
		l__Info__16.Text = p5[2].Name .. " has challenged you";
		l__Info__16.Transparency = 1;
		TransparentText(l__Info__16, 0);
		l__Accept__17.Transparency = 1;
		TransparentText(l__Accept__17, 0);
		l__Decline__18.Transparency = 1;
		TransparentText(l__Decline__18, 0);
		l__Info__16.Visible = true;
		l__Accept__17.Visible = true;
		l__Decline__18.Visible = true;
		local u1 = nil;
		local v19 = l__Decline__18.Activated:Connect(function()
			u1 = "Declined";
		end);
		while true do
			task.wait();
			if u1 ~= nil then
				break;
			end;
			if not l__LocalPlayer__12.Character then
				break;
			end;
			if l__LocalPlayer__12.Character and not l__LocalPlayer__12.Character:FindFirstChild("Challenger") then
				break;
			end;		
		end;
		l__Accept__17.Activated:Connect(function()
			u1 = "Accepted";
		end):disconnect();
		v19:disconnect();
		TransparentText(l__Info__16, 1);
		TransparentText(l__Accept__17, 1);
		TransparentText(l__Decline__18, 1);
		if u1 ~= nil then
			return u1;
		end;
	end;
	if v14 == "SpawnModel" then
		local v20 = p5[2]:Clone();
		v20:SetPrimaryPartCFrame(p5[3]);
		v20.Parent = workspace;
	elseif v14 == "RemoveModel" then
		local v21 = p5[2];
		if workspace:FindFirstChild(v21) then
			workspace:FindFirstChild(v21):Destroy();
		end;
	end;
	if v14 == "GetTouched" then
		local v22 = p5[2];
		local v23 = p5[4];
		if v23 then
			v22 = v23.CFrame;
		end;
		local v24 = {};
		for v25, v26 in pairs(workspace:GetChildren()) do
			if v26:FindFirstChild("Torso") and v26.Name ~= l__LocalPlayer__12.Name then
				table.insert(v24, v26.Torso);
			end;
		end;
		local casted = v7.new(v22, p5[3]):cast2(v24);
		if locked then
			table.insert(casted,locked.Torso)
		end
		if not plr.Character:FindFirstChild("Aura") then
			for i, v in pairs(workspace:GetChildren()) do
				if v:FindFirstChild("Torso") and v.Name ~= l__LocalPlayer__12.Name and (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 10 then
					table.insert(casted, v.Torso)
				end
			end
		else
			for i, v in pairs(workspace:GetChildren()) do
				if v:FindFirstChild("Torso") and v.Name ~= l__LocalPlayer__12.Name and (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 70 then
					table.insert(casted, v.Torso)
				end
			end
			if locked then
				for i, v in pairs(workspace:GetChildren()) do
					if v:FindFirstChild("Torso") and v.Name ~= l__LocalPlayer__12.Name and (v.HumanoidRootPart.Position - locked.HumanoidRootPart.Position).Magnitude <= 15 then
						table.insert(casted, v.Torso)
					end
				end
			end
		end
		if hitSelf then
            table.insert(casted, plr.Character.HumanoidRootPart)
		end
            if stack.Value then
            stack.Changed:Wait()
            return casted
        else
            return casted
        end
	end
	if v14 == "getRootPartCF" then
		return l__LocalPlayer__12.Character.HumanoidRootPart.CFrame;    
	end;
	if v14 == "GetTouchedPlayer" then
		local v27 = false;
		for v28, v29 in pairs(v7.new(p5[2], p5[3]):cast2({ l__LocalPlayer__12.Character.Torso })) do
			v27 = true;
		end;
		return { v27, l__LocalPlayer__12.Character:FindFirstChild("Humanoid").MoveDirection };
	end;
	if v14 == "Shake" then
		v11:Shake(v10.Presets[p5[2]]);
	end;
	if v14 == "GetTouchedNPCTouched" then
		local v36 = p5[2];
		local v37 = {};
		for v38, v39 in pairs(workspace:GetChildren()) do
			if v39:FindFirstChild("Torso") and v39.Name ~= l__LocalPlayer__12.Name and not game.Players:FindFirstChild(v39.Name) then
				table.insert(v37, v39.Torso);
			end;
		end;
		local u4 = p5[3];
		local l__RemoteEvent__5 = v36:WaitForChild("RemoteEvent");
		task.spawn(function()
			while v36.Parent and not v36:FindFirstChild("Cancel") do
				for i,v44 in pairs(v7.new(v36.CFrame, v36.Size):cast2(v37)) do
					if u4 == "Blue" and v44.Parent.Humanoid.MoveDirection.X == 0 and v44.Parent.Humanoid.MoveDirection.Y == 0 and v44.Parent.Humanoid.MoveDirection.Z == 0 then
						return;
					end;
					if u4 == "Orange" and v44.Parent.Humanoid.MoveDirection.X > 0 then
						return;
					end;
					if u4 == "Orange" and v44.Parent.Humanoid.MoveDirection.X < 0 then
						return;
					end;
					if u4 == "Orange" and v44.Parent.Humanoid.MoveDirection.Z < 0 then
						return;
					end;
					if u4 == "Orange" and v44.Parent.Humanoid.MoveDirection.Z > 0 then
						return;
					end;
					l__RemoteEvent__5:FireServer(v44.Parent);				
				end;
				task.wait(0.05);			
			end;
		end);
	end;
	if v14 == "GetTouchedNPC" then
		local v45 = p5[4];
		local v46 = false;
		for v47, v48 in pairs(v7.new(p5[2], p5[3]):cast2({ v45.Torso })) do
			v46 = true;
		end;
		return { v46, v45:FindFirstChild("Humanoid").MoveDirection };
	end;
	if v14 == "getMousePos" then
		local l__Torso__49 = l__LocalPlayer__12.Character.Torso;
		local l__LockOn__50 = l__LocalPlayer__12.Backpack.Main.LockOnScript.LockOn;
		if l__LockOn__50.Value then
			return l__LockOn__50.Value.Torso.CFrame.p;
		else
			return l__mouse__13.Hit.p;
		end;
	end;
	if v14 == "GetPartCFrame" then
		return p5[2].CFrame;
	end;
	if v14 == "EditMusic" then
		if l__LocalPlayer__12.PlayerScripts:FindFirstChild("Music") then
			l__LocalPlayer__12.PlayerScripts.Music[p5[2]]:Fire(p5[3])
		else
			task.wait(99999999999999999999)
		end
	end;
	if v14 ~= "DieScreen" then
		if v14 == "CharacterSelection" then
			local v51 = l__LocalPlayer__12.PlayerScripts.FireClient.CharacterSelection:Clone();
			v51.Parent = l__LocalPlayer__12.PlayerGui;
			while true do
				task.wait();
				if v51:WaitForChild("Character").Value ~= "" then
					break;
				end;			
			end;
			local l__Value__52 = v51:WaitForChild("Character").Value;
			task.spawn(function()
				task.wait(1);
				v51:Destroy();
			end);
			return l__Value__52;
		else
			return;
		end;
	end;
	l__LocalPlayer__12.PlayerScripts:WaitForChild("Music").Stop:Fire();
	l__LocalPlayer__12.PlayerGui.GameOver.Enabled = true;
	for v53 = 1, 0, -0.1 do
		l__LocalPlayer__12.PlayerGui.GameOver.Frame.BackgroundTransparency = v53;
		task.wait();
	end;
	if l__LocalPlayer__12.Character:FindFirstChild("GetDunkedOn") then
		l__LocalPlayer__12.PlayerGui.GameOver.Sound2:Play();
	else
		l__LocalPlayer__12.PlayerGui.GameOver.Sound:Play();
	end;
	for v54 = 1, 0, -0.1 do
		l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.ImageTransparency = v54;
		task.wait();
	end;
	task.wait(0.5);
	l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.TextLabel.Script.Disabled = false;
	while true do
		task.wait();
		if l__LocalPlayer__12.Character:FindFirstChild("Confirmed") then
			break;
		end;	
	end;
	l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.TextLabel.Script.Disabled = true;
	l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.TextLabel.Text = "";
	l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.TextLabel2.Text = "";
	for v55 = 0, 1, 0.1 do
		l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.ImageTransparency = v55;
		l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.TextLabel.TextTransparency = v55;
		l__LocalPlayer__12.PlayerGui.GameOver.Frame.ImageLabel.TextLabel2.TextTransparency = v55;
		task.wait();
	end;
	task.wait(1);
	l__LocalPlayer__12.PlayerGui.GameOver.Sound:Stop();
	l__LocalPlayer__12.PlayerScripts.Music.Resume:Fire();
	return true;
end;
local Effect = Instance.new("ColorCorrectionEffect")
Effect.Parent = game.Lighting
Effect.Saturation = -3
Effect.Brightness = 0
Effect.Contrast = 0
lolz = false
Effect.Enabled = false

local UIS = game:GetService("UserInputService")
local Mouse = game.Players.LocalPlayer:GetMouse()

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k)
    if k == "t" then
local kg = Instance.new("Sound", game.Players.LocalPlayer)
kg.Volume = 2
kg.SoundId = "rbxassetid://3816362502"
kg:Play()
spawn(function()
if lolz == false then
stack.Value = true
wait(0.3)
Effect.Enabled = true
lolz = true
else
stack.Value = false
Effect.Enabled = false
lolz = false
end
end)
end
end)

local mouse = game.Players.LocalPlayer:GetMouse()
mouse.KeyDown:Connect(function(k)
    if k == "8" then
local kg = Instance.new("Sound", game.Players.LocalPlayer)
kg.Volume = 2
kg.SoundId = "rbxassetid://3816362502"
kg:Play()
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Bone sword equipped";
    Text = "Canon sans";
    Duration = 1;
})
    local A_1 = 
{
    [1] = getrenv()._G.Pass, 
    [2] = "SpawnBone", 
    [3] = true 
}
local Event = game:GetService("ReplicatedStorage").Remotes.SansMoves
Event:InvokeServer(A_1)
wait(0.2)
end
end)

if clothing == true then
game.Players.LocalPlayer.Character.Shirt.ShirtTemplate = "rbxassetid://6567366926"
game.Players.LocalPlayer.Character.Pants.PantsTemplate = "rbxassetid://6567558277"
game.Players.LocalPlayer.Character.Head.face.Texture = "rbxassetid://7430510303"
end

repeat wait()
until game.Players.LocalPlayer.Character.Data.Stamina.Value <= 200
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Low Stamina detected";
    Text = "Running phase 2";
    Duration = 1;
})
game.Players:Chat(("Welp. Time to get serious."))
wait(5)
for _, v in pairs(game:GetService("ReplicatedStorage").Effects:GetChildren()) do
if v.Name == "DarkAuraEffect" then
local char = game.Players.LocalPlayer.Character
sword2 = v:Clone()
sword2.Parent = char
sword2.Anchored = false
weld = Instance.new("Weld", sword2)
weld.Part0 = sword2
weld.Part1 = char["Torso"]
sword2.Name = "CLOWNDARKAURA"
weld.C0 = CFrame.new(0, 2, 0) * CFrame.Angles(0, 0, 0)
sword2.Transparency = 1
end
end
for _, v in pairs(game:GetService("ReplicatedStorage").Effects:GetChildren()) do
if v.Name == "TransformationAura" then
local char = game.Players.LocalPlayer.Character
sword2 = v:Clone()
sword2.Parent = char
sword2.Anchored = false
weld = Instance.new("Weld", sword2)
weld.Part0 = sword2
weld.Part1 = char["Torso"]
sword2.Name = "CLOWNDARKAURA"
weld.C0 = CFrame.new(0, 2, 0) * CFrame.Angles(0, 0, 0)
sword2.Transparency = 1
wait(0.1)
game.Players.LocalPlayer.Character.Head.face.Texture = "rbxassetid://6143854244"
end
end
wait(0.1)
	game.StarterGui:SetCore("SendNotification", {
		Title = "HM!Sans loaded";
		Text = "No cd sans modified by minty#6672";
		Duration = 8;
	})
